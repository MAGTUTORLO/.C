#include<stdio.h>
struct sample
	{
	long x,i,j,array[100],count,temp;
	long prime[100],m=0,countprime=0;
	long composite[100],n=0,countcomposite=0;
	};

void print (struct sample);

main()
	{
	struct sample a;

	clrscr();

	printf("Input(s): ");
	scanf("%ld",&a.x);

	printf("Input: ");

	for (a.i=0;a.i<a.x;a.i++)
		{
		scanf("%ld",&a.array[i]);
		}


for (a.i=0;a.i<a.x;a.i++)
{
a.count=0;
	for (a.j=2;a.j<a.array[i];a.j++)
		{
		if (a.array[a.i]%a.j==0)
			{
			a.count++;
			}
		}

	if (a.count==0)
		{
		a.prime[m]=a.array[i];
		a.m++;
		a.countprime++;
		}
	else
		{
		a.composite[n]=a.array[i];
		a.n++;
		a.countcomposite++;
		}
}


for (a.i=0;a.i<a.countprime-1;a.i++)
	{
	for (a.j=0;a.j<a.countprime-i-1;a.j++)
		{
		if (a.prime[j]>a.prime[j+1])
			{
			a.temp=a.prime[j];
			a.prime[j]=a.prime[j+1];
			a.prime[j+1]=a.temp;
			}
		}
	}

for (a.i=0;a.i<a.countcomposite-1;a.i++)
	{
	for (a.j=0;a.j<a.countcomposite-a.i-1;a.j++)
		{
		if (a.composite[j]<a.composite[a.j+1])
			{
			a.temp=a.composite[a.j];
			a.composite[j]=a.composite[a.j+1];
			a.composite[a.j+1]=a.temp;
			}
		}
	}

	print (a);
	getch();
	}

void print (struct sample b)
	{

	printf("Output (Ascending): ");
	for (b.i=0;b.i<b.countprime;b.i++)
		{
		printf(" %ld ",b.prime[i]);
		}

	printf("\n");
printf("Output (Descending): ");
for (b.i=0;b.i<b.countcomposite;b.i++)
	{
	printf(" %ld ",b.composite[i]);
	}
	}


